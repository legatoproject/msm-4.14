Sierra Wireless MCU Ultra Low Power Management
	(C) 2016 Sierra Wireless, GPL

V1.03

The Sierra Wireless WP product series are equipped with an on-board
MCU whose prime function is to allow the system to operate in a very
low power state (Ultra Low Power State or ULPS). In this state, power
is removed from the main MDM chip, while the MCU runs at the lowest
possible current consumption monitoring for configured boot conditions
When triggered, the MCU then restores power to boot the MDM. The MCU
provides GPIO and ADC services in support of boot options. This power
operation mode is referred as Ultra Low Power Mode, or ULPM.

The Sierra Wireless WP76/77 series also supports Power Saving Mode (PSM).
PSM is a 3GPP Release 12 feature to improve the power management of User
Equipment (UE) and to prevent network (NW) congestion. The PSM operation
is controlled by two timers. Active Timer (T3324) defines the time the
UE stays active after entering idle mode following an Attach or Tracking
Area Update (TAU) procedure. PSM Timer (T3412) defines the extended time
for the UE to send next periodic TAU. During Active Time, the network
can still access the UE. After Active Time elapse, the network will not
access the UE anymore and the UE is free to power off itself or enter
a low power mode. However, the UE may access the registered network at
any point of time without Attach procedure.

The MCU kernel driver provides a sysfs interface to query and configure
the MCU I/O and boot conditions for ULPM and PSM operations.


1. GPIO
===============

The MCU supports 5 external pins that may be configured as GPIO.
These are exposed through the standard gpiolib interface
(/sys/class/gpio) as GPIO 36, 37, 38, 40 and 41. They may be
exported (default is input, no pull), pull configured (DOWN, UP),
or direction set as output with value setting (0, 1).
IRQ and boot source support is available on GPIO36 and GPIO 38
Note that any of the 5 GPIOs if configured (exported) will persist
while in ULPM (at the expense of additional current consumption
depending on configuration).
For more details on this interface, see:
Documentation/gpio/sysfs.txt


2. ADC
===============

The MCU supports 2 external pins that may be configured as ADC
inputs. These correspond to ADC2 and ADC3 of the WP76xx. They are
exposed through the standard hwmon interface (/sys/class/hwmon)
at hwmon1. Each ADC may be read via in0_mv and in1_mv. The value
is returned in milliVolts (range: 0 - 1800mV).
The interface is loosely based on that described in:
Documentation/hwmon/sysfs-interface


3. ULPM
===============

Configuration and querying of boot sources to wake from ULPM are
done via a custom interface /sys/module/swimcu_pm/boot_source.
Note that if this sysfs node is not present, this indicates that
the MCU failed to initialize when the kernel started up and hence
the feature is not available.

Available boot sources are:
	/sys/module/swimcu_pm/boot_source/timer/timeout
		(value in seconds)
	/sys/module/swimcu_pm/boot_source/gpio36/edge
	/sys/module/swimcu_pm/boot_source/gpio38/edge
		(values: off, low, high, rising, falling, both)
	/sys/module/swimcu_pm/boot_source/adc/adc2/above
	/sys/module/swimcu_pm/boot_source/adc/adc2/below
		(values in range 0-1800mV)
	/sys/module/swimcu_pm/boot_source/adc/interval
		(value in range 1-65535ms)

For ADC wakeup, the above and below parameters specify the range of values
that trigger boot. The default values are 0 and 1800, respectively.
The interval parameter sets the timeout period for the low power timer to
trigger ADC readings. Continuous mode is not supported, so the interval
parameter must be set before enabling ULPM. A lower interval value will result
in more frequent ADC readings at the expense of higher current consumption.
Current measurements at typical sampling intervals are shown below.
After configuration, the ADC must be selected before entering ULPM or it will
not be used as a boot source.

For example, to trigger on a 500-1000mV input to adc2 with 5 ms interval
between ADC readings:

Write 500 to:
	/sys/module/swimcu_pm/boot_source/adc/adc2/above
Write 1000 to:
	/sys/module/swimcu_pm/boot_source/adc/adc2/below
Write 5 to:
	/sys/module/swimcu_pm/boot_source/adc/interval
Write 1 to:
	/sys/module/swimcu_pm/boot_source/adc/adc2/select

Average current consumption for ULPM with ADC boot source:
ADC Sampling Interval (ms)	Average Current (uA)
1				50-80
5				13-14
10				8-9
100				6.3
1000				6

Note there is one millisecond of overhead to process the timer interrupt
and trigger an ADC reading, so the actual period between ADC readings is
one plus the sampling interval.

Once boot sources are configured, ULPM may be enabled by writing 1 to:
	/sys/module/swimcu_pm/boot_source/enable
Alternatively, if no boot sources are desired (software power down),
then 2 is written to this location. In this mode only the power switch
may be used to return from ULPM mode.

If a boot source is triggered, either before entering or upon
returning from ULPM, the triggered status is set to 1 for that
boot source:
	/sys/module/swimcu_pm/boot_source/timer/triggered
	/sys/module/swimcu_pm/boot_source/gpio36/triggered
	/sys/module/swimcu_pm/boot_source/gpio38/triggered
	/sys/module/swimcu_pm/boot_source/adc/adc2/triggered
	/sys/module/swimcu_pm/boot_source/adc/adc3/triggered

In the event that a boot source triggers before entering ULPM (or
no boot source is configured), it will fail that writing 1 to
/sys/module/swimcu_pm/boot_source/enable.
The boot source will need to be reenabled in this case.
Note the timer will start immediately when ULPM request is accepted.


4. Power Saving Mode (PSM)
==========================

All modules of WP76xx/77xx families supports PSM. A set of sysfs nodes
are provided for PSM configuration:

/sys/module/swimcu_pm/psm/active_time
  (T3324 value in seconds, must conform to GPRS TIMER2 format)

/sys/module/swimcu_pm/psm/psm_time
  (T3412 value in seconds, must conform to GPRS TIMER3 format)

/sys/module/swimcu_pm/psm/enable
  (Value     Description
     0       To request disable PSM
     1       To request enable PSM with ULPM fallback
     2       To request power off module
     3       DO NOT USE!!!
     4       No request
     5       To request enable psm only
     6       To request ULPM only)

/sys/module/swimcu_pm/psm/status
  (Value     Description
   -17       ULPM failed to enter ULPS.
   -16       Failed to configure wakeup sources.
   -15       No wakeup source configured to wake from ULPS.
   -11       PSM client failed to request PSM in OOS or LS.
   -10       Network with Limited Service (LS).
    -9       Network out of service (OOS).
    -8       PSM request is rejected due to short PSM time.
    -7       PSM request is rejected due to PSM time longer than modem.
    -6       PSM request is rejected due to modem not ready.
    -5       PSM request is rejected due to PSM not enabled.
    -4       Invalid PSM time requested.
    -3       Invalid active time requested.
    -2       Failed to send PSM request.
    -1       QMI DMS service not ready for accept request.
     0       Initial status.
     1       Waiting for QMI DMS service ready.
     2       QMI DMS service ready to accept request.
     3       Requested to disable PSM.
     4       Requested to enable PSM.
     5       Modem is ready for PSM.
     6       Modem is not ready for PSM.
     7       PSM transition is completed on modem.
     8       PSM is enabled.
     9       PSM is disabled.
    10       PSM client has requested PSM in OOS or LS.
    15       ULPM is requeseted.
    16       ULPM is requeseted as fallback from PSM failure.
    17       ULPM Entered Ultra Low Power State successfully.)

I2C messaging handshake is used for MCU to synchronize with the MDM
power state. Two more sysfs nodes are provided for user to query and
configure supported synchronization options:

/sys/module/swimcu_pm/psm/sync_support
  (Bit mask shows the options of synchronization settings supported by MCU.
   0b0001 - Option A
       MCU I2C is always on during PSM, waiting for MDM message;
       MDM RTC Alarm is used as the timer wakeup source.
   0b0010 - Option B
       MCU I2C is only on near the end of PSM, waiting for MDM message;
       MDM RTC Alarm is used as the timer wakeup source.
   0b0100 - Option C
       MCU I2C is on at the end of PSM;
       MCU RTC Alarm is used as the timer wakeup source;
       MDM is completely powered off.)

/sys/module/swimcu_pm/psm/sync_select
  (Bit position in the 'sync_support' mask selects the sync settings
   1 - Option A, average current during PSM: ~210  uA
   2 - Option B, average current during PSM:  ~22.5uA
   3 - Option C, average current during PSM:   ~6.9uA)

Besides the timer boot condition, the GPIO and ADC wakeup sources can
also be configure as boot conditions to wake from PSM.


5. PSM with ULPM fallback
==========================

An option is provided for user to request PSM with ULPM as fallback.
When this option is requested, a PSM request is sent to a registered
network. If the PSM request is honored by the network, autonomous PSM
will occur. If the PSM request is rejected by the netwrok, a ULPM
operation will start immediately. As a result, the MDM will be powered
off immediately with a timer boot condition, configured with the PSM
time (T3412 value) as the timeout value. Any other GPIO and ADC boot
condition configured for the PSM will also take effect for the ULPM.
On exit from ULPM, a normal Attach procedure will be performed between
UE and NW.

Note the following sysfs node pairs are alias to each other:

	'/sys/module/swimcu_pm/psm/psm_time'
and
	'/sys/module/swimcu_pm/boot_source/timer/timeout'

	'sys/module/swimcu_pm/psm/enable'
and
	'/sys/module/swimcu_pm/boot_source/enable'


6. MCU Firmware Version
==========================

The current MCU firmware version may be queried from:
	/sys/module/swimcu_pm/boot_source/firmware/version
As noted with boot_source, if this sysfs node is not present, that
indicates that the MCU failed to initialize when the kernel booted
up. This could be, for example, because firmware has not been loaded
on the MCU. If communication with the MCU is lost after boot up, a
version of 000.000 is returned.


7. Debug
===============

a) Logging
Kernel logging for specific MCU driver functions may be
controlled by setting bits in:
/sys/module/swimcu_pm/parameters/debug_mask
The log bits are defined as follows:
	Bit	Function
	0	Initialization
	1	Event
	2	Protocol (quite verbose)
	3	Power Management
	4	GPIO
	5	ADC
	6	Firmware
	7	Other

By default on power up, only bit 0 is set. Subsequent values set
are not persistent. The interface accepts values in decimal.

b) Reset
If the MCU resets, the status may be queried from:
/sys/module/swimcu_pm/parameters/reset_source
Commonly observed reset source values are:
1024: bit 10 - Software reset, e.g. after a MCU firmware update
130: bit 7,1 - Power on reset, low voltage detect, respectively
               e.g. on initial power up of the module
This value is cleared on soft reset of the module (MCU does not
reset) or by writing via sysfs.

c) Fault
Resets and other error conditions are recorded in the fault_mask
and fault_count. Each fault type is assigned a bit in the mask
that is OR'ed in upon the fault occurrence. The fault_count is
incremented with each occurrence. If the maximum fault threshold
is reached, the automatic fault recovery mechanism is disabled.
This may be reset by writing 0 to the fault_mask.
The fault bits are defined as follows:
	Bit	Function
	0	TX timeout	(max TX retries exceeded)
	1	TX NAK		(NAK received on TX message)
	2	RX timeout	(max RX wait time exceeded)
	3	RX CRC		(CRC failed on RX message)
	8	Reset		(MCU reset detected,
					may be normal operation)
	9	Event overflow	(max concurrent events exceeded,
					event handling disabled)

